<local:MainPageBase
    x:Class="Tuvi.App.Shared.Views.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Tuvi.App.Shared.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:Tuvi.App.Shared.Controls"
    xmlns:viewmodels="using:Tuvi.App.ViewModels"
    xmlns:extensions="using:Tuvi.App.Shared.Extensions"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:xamarin="http://uno.ui/xamarin"
    xmlns:behaviors="using:Tuvi.App.Shared.Behaviors"
    xmlns:winui="using:Microsoft.UI.Xaml.Controls"
    mc:Ignorable="d xamarin"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    NavigationCacheMode="Enabled">

    <local:MainPageBase.DataContext>
        <viewmodels:MainPageViewModel/>
    </local:MainPageBase.DataContext>

    <Grid x:Name="root">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <winui:ItemsRepeater x:Name="ProblemsList"
                             Margin="0,0,0,0"
                             MaxHeight="150"
                             ItemsSource="{x:Bind ViewModel.Problems, Mode=OneWay}"
                             ElementClearing="OnElementClearing">
            <winui:ItemsRepeater.ItemTemplate>
                <DataTemplate x:DataType="viewmodels:Problem">
                    <winui:InfoBar Title="{x:Bind Title}"
                                   Message="{x:Bind Message}"
                                   Severity="Warning"
                                   IsOpen="True"
                                   IsClosable="True"
                                   IsIconVisible="True"
                                   HorizontalAlignment="Stretch"
                                   CloseButtonCommand="{x:Bind CloseCommand}"
                                   CloseButtonCommandParameter="{x:Bind Mode=OneWay}"
                                   Background="{ThemeResource InfoBarBackground}">
                        <winui:InfoBar.ActionButton >
                            <Button Content="{x:Bind SolutionText, Mode=OneWay}"
                                    Command="{x:Bind ActionCommand, Mode=OneWay}"
                                    CommandParameter="{x:Bind Mode=OneWay}"/>
                        </winui:InfoBar.ActionButton>
                    </winui:InfoBar>
                </DataTemplate>
            </winui:ItemsRepeater.ItemTemplate>
        </winui:ItemsRepeater>
        <NavigationView x:Name="NavigationMenu"
                        Grid.Row="1"
                        Style="{StaticResource MainPageNavigationViewStyle}"
                        SelectionChanged="NavigationMenu_SelectionChanged"
                        IsBackButtonVisible="Collapsed">
            <NavigationView.PaneCustomContent>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*" />
                        <RowDefinition Height="8" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="1*" />
                        </Grid.RowDefinitions>

                        <NavigationViewList>
                            <interactivity:Interaction.Behaviors>
                                <behaviors:ItemClickCommandBehavior />
                            </interactivity:Interaction.Behaviors>

                            <NavigationViewItem x:Uid="NewMessageNavigationItem"
                                                Icon="Edit"
                                                SelectsOnInvoked="False"
                                                extensions:AttachedCommands.ClickCommand="{x:Bind ViewModel.WriteNewMessageCommand}">
                            </NavigationViewItem>

                            <NavigationViewItem x:Uid="AllMessagesNavigationItem"
                                                SelectsOnInvoked="False"
                                                extensions:AttachedCommands.ClickCommand="{x:Bind ShowAllMessagesCommand}">
                                <NavigationViewItem.Icon>
                                    <FontIcon Glyph="&#xE119;" />
                                </NavigationViewItem.Icon>
                            </NavigationViewItem>

                            <NavigationViewItem x:Uid="IdentityManagerNavigationItem"
                                                SelectsOnInvoked="False"
                                                extensions:AttachedCommands.ClickCommand="{x:Bind OpenIdentityManagerCommand}">
                                <NavigationViewItem.Icon>
                                    <SymbolIcon Symbol="ContactInfo" />
                                </NavigationViewItem.Icon>
                            </NavigationViewItem>
                        </NavigationViewList>

                        <controls:NavPanelTabControl Grid.Row="1"
                                                     Visibility="{x:Bind NavigationMenu.IsPaneOpen, Mode=OneWay}"
                                                     TabModel="{x:Bind ViewModel.NavPanelTabModel, Mode=OneWay}" />

                    </Grid>

                    <NavigationViewList Grid.Row="2">
                        <interactivity:Interaction.Behaviors>
                            <behaviors:ItemClickCommandBehavior />
                        </interactivity:Interaction.Behaviors>
                        
                        <NavigationViewItem x:Uid="AboutAppNavigationItem"
                                            SelectsOnInvoked="False"
                                            extensions:AttachedCommands.ClickCommand="{x:Bind ShowAboutPageCommand}">
                            <NavigationViewItem.Icon>
                                <FontIcon xamarin:FontFamily="/Assets/Fonts/segmdl2.ttf#"
                                          Glyph="&#xE946;" />
                            </NavigationViewItem.Icon>
                        </NavigationViewItem>
                    </NavigationViewList>
                </Grid>

            </NavigationView.PaneCustomContent>


          <SplitView x:Name="splitView" 
                     PaneBackground="{ThemeResource SystemControlBackgroundChromeMediumLowBrush}"
                     IsPaneOpen="False" 
                     OpenPaneLength="360" 
                     CompactPaneLength="48" 
                     DisplayMode="Inline">
            <SplitView.Pane>
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                
                <Frame x:Name="paneFrame"/>
                
                <AppBarButton Grid.Column="1"
                              Height="48"
                              Width="48"
                              VerticalAlignment="Top"
                              Command="{x:Bind ClosePaneCommand}">
                  <SymbolIcon Symbol="Cancel"/>
                </AppBarButton>
                
            </Grid>
            </SplitView.Pane>
            <Frame x:Name="contentFrame" />
          </SplitView>
            
        </NavigationView>

    </Grid>
</local:MainPageBase>