<local:MainPageBase x:Class="Tuvi.App.Shared.Views.MainPage"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:behaviors="using:Eppie.App.UI.Behaviors"
                    xmlns:controls="using:Tuvi.App.Shared.Controls"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:extensions="using:Tuvi.App.Shared.Extensions"
                    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
                    xmlns:local="using:Tuvi.App.Shared.Views"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:viewmodels="using:Tuvi.App.ViewModels"
                    xmlns:winui="using:Microsoft.UI.Xaml.Controls"
                    xmlns:xamarin="http://uno.ui/xamarin"
                    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                    NavigationCacheMode="Enabled"
                    mc:Ignorable="d xamarin">

    <Page.Resources>
        <LinearGradientBrush x:Key="ButtonGradientBrush" StartPoint="0,0" EndPoint="1,0">
            <GradientStop Offset="0.0" Color="#FFD9EE" />
            <GradientStop Offset="0.5" Color="#FFFFFF" />
            <GradientStop Offset="1.0" Color="#D9FFFF" />
        </LinearGradientBrush>

        <Style x:Key="GradientButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource ButtonGradientBrush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="RootGrid">
                            <Border x:Name="BackgroundBorder"
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="4">
                                <ContentPresenter x:Name="ContentPresenter"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  Content="{TemplateBinding Content}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}" />
                            </Border>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ColorAnimation EnableDependentAnimation="True"
                                                            Storyboard.TargetName="BackgroundBorder"
                                                            Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                            To="#FFD9EE"
                                                            Duration="0:0:0.2" />
                                            <ColorAnimation EnableDependentAnimation="True"
                                                            Storyboard.TargetName="BackgroundBorder"
                                                            Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                            To="#EEEEEE"
                                                            Duration="0:0:0.2" />
                                            <ColorAnimation EnableDependentAnimation="True"
                                                            Storyboard.TargetName="BackgroundBorder"
                                                            Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[2].(GradientStop.Color)"
                                                            To="#D9FFFF"
                                                            Duration="0:0:0.2" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimation EnableDependentAnimation="True"
                                                            Storyboard.TargetName="BackgroundBorder"
                                                            Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                            To="#FFD9EE"
                                                            Duration="0:0:0.1" />
                                            <ColorAnimation EnableDependentAnimation="True"
                                                            Storyboard.TargetName="BackgroundBorder"
                                                            Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                            To="#DDDDDD"
                                                            Duration="0:0:0.1" />
                                            <ColorAnimation EnableDependentAnimation="True"
                                                            Storyboard.TargetName="BackgroundBorder"
                                                            Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[2].(GradientStop.Color)"
                                                            To="#D9FFFF"
                                                            Duration="0:0:0.1" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation EnableDependentAnimation="True"
                                                             Storyboard.TargetName="BackgroundBorder"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="0.5"
                                                             Duration="0:0:0.1" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="PaneStates">
                                    <VisualState x:Name="PaneOpen">
                                        <VisualState.StateTriggers>
                                            <StateTrigger IsActive="{Binding IsPaneOpen, ElementName=NavigationMenu, Mode=OneWay}" />
                                        </VisualState.StateTriggers>
                                        <VisualState.Setters>
                                            <Setter Target="RootGrid.Width" Value="Auto" />
                                            <Setter Target="RootGrid.Height" Value="36" />
                                            <Setter Target="RootGrid.HorizontalAlignment" Value="Stretch" />
                                            <Setter Target="ContentPresenter.ContentTemplate" Value="{x:Null}" />
                                            <Setter Target="ContentPresenter.Content" Value="{TemplateBinding Content}" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PaneClosed">
                                        <VisualState.StateTriggers>
                                            <StateTrigger IsActive="{Binding IsPaneOpen, ElementName=NavigationMenu, Mode=OneWay, Converter={StaticResource InverseBoolConverter}}" />
                                        </VisualState.StateTriggers>
                                        <VisualState.Setters>
                                            <Setter Target="RootGrid.Width" Value="48" />
                                            <Setter Target="RootGrid.Height" Value="48" />
                                            <Setter Target="RootGrid.HorizontalAlignment" Value="Center" />
                                            <Setter Target="RootGrid.VerticalAlignment" Value="Center" />
                                            <Setter Target="ContentPresenter.ContentTemplate">
                                                <Setter.Value>
                                                    <DataTemplate>
                                                        <FontIcon FontSize="14"
                                                                  Foreground="Black"
                                                                  Glyph="&#xEB52;" />
                                                    </DataTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>

    <local:MainPageBase.DataContext>
        <viewmodels:MainPageViewModel />
    </local:MainPageBase.DataContext>

    <Grid x:Name="root">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <winui:ItemsRepeater x:Name="ProblemsList"
                             MaxHeight="150"
                             Margin="0,0,0,0"
                             ElementClearing="OnElementClearing"
                             ItemsSource="{x:Bind ViewModel.Problems, Mode=OneWay}">
            <winui:ItemsRepeater.ItemTemplate>
                <DataTemplate x:DataType="viewmodels:Problem">
                    <winui:InfoBar Title="{x:Bind Title}"
                                   HorizontalAlignment="Stretch"
                                   Background="{ThemeResource InfoBarBackground}"
                                   CloseButtonCommand="{x:Bind CloseCommand}"
                                   CloseButtonCommandParameter="{x:Bind Mode=OneWay}"
                                   IsClosable="True"
                                   IsIconVisible="True"
                                   IsOpen="True"
                                   Message="{x:Bind Message}"
                                   Severity="Warning">
                        <winui:InfoBar.ActionButton>
                            <Button Command="{x:Bind ActionCommand, Mode=OneWay}"
                                    CommandParameter="{x:Bind Mode=OneWay}"
                                    Content="{x:Bind SolutionText, Mode=OneWay}" />
                        </winui:InfoBar.ActionButton>
                    </winui:InfoBar>
                </DataTemplate>
            </winui:ItemsRepeater.ItemTemplate>
        </winui:ItemsRepeater>

        <winui:NavigationView x:Name="NavigationMenu"
                              Grid.Row="1"
                              IsBackButtonVisible="Collapsed"
                              ItemInvoked="OnNavigationViewItemInvoked"
                              Style="{StaticResource MainNavigationViewStyle}">
            <winui:NavigationView.MenuItems>
                <winui:NavigationViewItem x:Uid="NewMessageNavigationItem"
                                          extensions:AttachedCommands.ClickCommand="{x:Bind ViewModel.WriteNewMessageCommand}"
                                          Icon="Edit"
                                          SelectsOnInvoked="False" />
                <winui:NavigationViewItem x:Uid="AllMessagesNavigationItem"
                                          extensions:AttachedCommands.ClickCommand="{x:Bind ShowAllMessagesCommand}"
                                          SelectsOnInvoked="False">
                    <winui:NavigationViewItem.Icon>
                        <FontIcon Glyph="&#xE119;" />
                    </winui:NavigationViewItem.Icon>
                </winui:NavigationViewItem>
                <winui:NavigationViewItem x:Uid="IdentityManagerNavigationItem"
                                          extensions:AttachedCommands.ClickCommand="{x:Bind OpenIdentityManagerCommand}"
                                          SelectsOnInvoked="False">
                    <winui:NavigationViewItem.Icon>
                        <SymbolIcon Symbol="ContactInfo" />
                    </winui:NavigationViewItem.Icon>
                </winui:NavigationViewItem>
            </winui:NavigationView.MenuItems>

            <winui:NavigationView.PaneFooter>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <controls:NavPanelTabControl Grid.Row="0"
                                                 TabModel="{x:Bind ViewModel.NavPanelTabModel, Mode=OneWay}"
                                                 Visibility="{x:Bind NavigationMenu.IsPaneOpen, Mode=OneWay}" />
                    <Button Grid.Row="1"
                            Height="36"
                            Margin="4,8,4,0"
                            HorizontalAlignment="Stretch"
                            Style="{StaticResource GradientButtonStyle}"
                            Visibility="{x:Bind ViewModel.IsSupportDevelopmentButtonVisible, Mode=OneWay}">
                        <Button.Flyout>
                            <Flyout>
                                <controls:SupportDevelopmentControl Price="{x:Bind ViewModel.SupportDevelopmentPrice, Mode=OneWay}" SupportDevelopmentCommand="{x:Bind ViewModel.SupportDevelopmentCommand}" />
                            </Flyout>
                        </Button.Flyout>
                        <StackPanel VerticalAlignment="Center" Orientation="Horizontal">
                            <FontIcon Margin="0,0,8,0"
                                      FontSize="14"
                                      Foreground="Black"
                                      Glyph="&#xEB52;" />
                            <TextBlock x:Uid="SupportDevelopmentButton" Foreground="Black" />
                        </StackPanel>
                    </Button>
                </Grid>
            </winui:NavigationView.PaneFooter>

            <winui:NavigationView.FooterMenuItems>

                <winui:NavigationViewItem x:Uid="AboutAppNavigationItem"
                                          extensions:AttachedCommands.ClickCommand="{x:Bind ShowAboutPageCommand}"
                                          SelectsOnInvoked="False">
                    <winui:NavigationViewItem.Icon>
                        <FontIcon xamarin:FontFamily="/Assets/Fonts/segmdl2.ttf#" Glyph="&#xE946;" />
                    </winui:NavigationViewItem.Icon>
                </winui:NavigationViewItem>

            </winui:NavigationView.FooterMenuItems>

            <SplitView x:Name="splitView"
                       CompactPaneLength="48"
                       DisplayMode="Inline"
                       IsPaneOpen="False"
                       OpenPaneLength="360"
                       PaneBackground="{ThemeResource SystemControlBackgroundChromeMediumLowBrush}">
                <SplitView.Pane>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <Frame x:Name="paneFrame" />

                        <AppBarButton Grid.Column="1"
                                      Width="48"
                                      Height="48"
                                      VerticalAlignment="Top"
                                      Command="{x:Bind ClosePaneCommand}">
                            <SymbolIcon Symbol="Cancel" />
                        </AppBarButton>

                    </Grid>
                </SplitView.Pane>
                <Frame x:Name="contentFrame" />
            </SplitView>

        </winui:NavigationView>

    </Grid>
</local:MainPageBase>
