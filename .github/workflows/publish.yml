################################################################################
#                                                                              #
#   Copyright 2025 Eppie(https://eppie.io)                                     #
#                                                                              #
#   Licensed under the Apache License, Version 2.0 (the "License");            #
#   you may not use this file except in compliance with the License.           #
#   You may obtain a copy of the License at                                    #
#                                                                              #
#       http://www.apache.org/licenses/LICENSE-2.0                             #
#                                                                              #
#   Unless required by applicable law or agreed to in writing, software        #
#   distributed under the License is distributed on an "AS IS" BASIS,          #
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
#   See the License for the specific language governing permissions and        #
#   limitations under the License.                                             #
#                                                                              #
################################################################################

---

name: Publish
run-name: >-
   ${{ 
       github.event_name == 'release' && format('Publish: {0}', github.ref_name) ||
       github.event_name == 'workflow_dispatch' && github.event.inputs.architecture == 'all' && github.event.inputs.os == 'all' && format('Publish: {0}', github.event.inputs.framework ) || 
       github.event_name == 'workflow_dispatch' && github.event.inputs.architecture == 'all' && format('Publish: {0} on {1}', github.event.inputs.framework, github.event.inputs.os ) || 
       github.event_name == 'workflow_dispatch' && github.event.inputs.os == 'all' && format('Publish: {0} ({1})', github.event.inputs.framework, github.event.inputs.architecture ) || 
       github.event_name == 'workflow_dispatch' && format('Publish: {0} ({1}) on {2}', github.event.inputs.framework, github.event.inputs.architecture, github.event.inputs.os ) || ''
    }}

on: # yamllint disable-line rule:truthy
  workflow_dispatch:
    inputs:
      framework:
        type: choice
        default: all
        options:
          - all
          - desktop
      os:
        type: choice
        default: all
        options:
          - all
          - linux
          - macos
          - windows
      architecture:
        type: choice
        default: all
        options:
          - all
          - arm64
          - x64
      dotnet-verbosity:
        type: choice
        default: minimal
        options:
          - quiet
          - minimal
          - normal
          - detailed
          - diagnostic

  release:
    types: [published]

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest

    outputs:
      dotnet-verbosity: ${{ steps.init-params.outputs.dotnet-verbosity }}
      publish-os: ${{ steps.init-params.outputs.os }}
      publish-arch: ${{ steps.init-params.outputs.arch }}
      publish-framework: ${{ steps.init-params.outputs.framework }}
      publish-binaries: ${{ steps.packages.outputs.binaries }}
      publish-app: ${{ steps.packages.outputs.app }}
      publish-snap: ${{ steps.packages.outputs.snap }}

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Initialize parameters
        id: init-params
        shell: bash
        run: |
          arch="all"
          framework="all"
          os="all"
          dotnet_verbosity="minimal"

          if [[ ${{ github.event_name }} == 'workflow_dispatch' ]]; then
            arch="${{ github.event.inputs.architecture }}"
            framework="${{ github.event.inputs.framework }}"
            os="${{ github.event.inputs.os }}"
            dotnet_verbosity="${{ github.event.inputs.dotnet-verbosity }}"
          fi

          echo "arch=$arch" >> $GITHUB_OUTPUT
          echo "framework=$framework" >> $GITHUB_OUTPUT
          echo "os=$os" >> $GITHUB_OUTPUT
          echo "dotnet-verbosity=$dotnet_verbosity" >> $GITHUB_OUTPUT

      - name: Read configuration
        id: publish-config
        uses: finebits/github-actions/toolset/file/read@39ec051fda4f00ab2ac5ffb6336ab0ea1ad9ad0f # v3.0.0
        with:
          file: ./.github/configurations/publish.json

      - name: Define publication packages
        id: packages
        shell: bash
        run: |
          # Publish Desktop Binaries
          os_suitable="${{ contains(fromJSON(steps.publish-config.outputs.content).desktop-binaries.os, steps.init-params.outputs.os) }}"
          framework_suitable="${{ contains(fromJSON(steps.publish-config.outputs.content).desktop-binaries.framework, steps.init-params.outputs.framework) }}"
          publish_binaries=$([[ $os_suitable == 'true' && $framework_suitable == 'true' ]] && echo "true" || echo "false")
          echo "binaries=$publish_binaries" >> $GITHUB_OUTPUT

          # Publish Desktop Linux snap package
          os_suitable="${{ contains(fromJSON(steps.publish-config.outputs.content).desktop-snap.os, steps.init-params.outputs.os) }}"
          framework_suitable="${{ contains(fromJSON(steps.publish-config.outputs.content).desktop-snap.framework, steps.init-params.outputs.framework) }}"
          publish_snap=$([[ $os_suitable == 'true' && $framework_suitable == 'true' ]] && echo "true" || echo "false")
          echo "snap=$publish_snap" >> $GITHUB_OUTPUT

          # Publish Desktop Mac app package
          os_suitable="${{ contains(fromJSON(steps.publish-config.outputs.content).desktop-app.os, steps.init-params.outputs.os) }}"
          framework_suitable="${{ contains(fromJSON(steps.publish-config.outputs.content).desktop-app.framework, steps.init-params.outputs.framework) }}"
          publish_app=$([[ $os_suitable == 'true' && $framework_suitable == 'true' ]] && echo "true" || echo "false")
          echo "app=$publish_app" >> $GITHUB_OUTPUT

  publish-desktop-binaries:
    name: Publish Desktop Binaries
    needs: prepare
    if: ${{ needs.prepare.outputs.publish-binaries == 'true' }}
    uses: ./.github/workflows/publish-desktop-binaries.yml
    with:
      os: ${{ needs.prepare.outputs.publish-os }}
      architecture: ${{ needs.prepare.outputs.publish-arch }}
      dotnet-verbosity: ${{ needs.prepare.outputs.dotnet-verbosity }}
    secrets: inherit

  publish-desktop-app:
    name: Publish Desktop [app]
    needs: prepare
    if: ${{ needs.prepare.outputs.publish-app == 'true' }}
    uses: ./.github/workflows/publish-desktop-app.yml
    with:
      architecture: ${{ needs.prepare.outputs.publish-arch }}
      dotnet-verbosity: ${{ needs.prepare.outputs.dotnet-verbosity }}
    secrets: inherit

  publish-desktop-snap:
    name: Publish Desktop [snap]
    needs: prepare
    if: ${{ needs.prepare.outputs.publish-snap == 'true' }}
    uses: ./.github/workflows/publish-desktop-snap.yml
    with:
      architecture: ${{ needs.prepare.outputs.publish-arch }}
      dotnet-verbosity: ${{ needs.prepare.outputs.dotnet-verbosity }}
    secrets: inherit

  upload-assets:
    name: Upload Assets
    if: ${{ github.event_name == 'release' && !cancelled() && !failure() }}
    needs: [ publish-desktop-binaries, publish-desktop-snap, publish-desktop-app ]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    env:
      assets-path: './.assets'

    steps:
      - name: Download All Artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          path: "${{ env.assets-path }}"

      - name: Upload All Assets
        uses: finebits/github-actions/toolset/github/upload-release-asset@39ec051fda4f00ab2ac5ffb6336ab0ea1ad9ad0f # v3.0.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.event.release.tag_name }}
          path: "${{ env.assets-path }}/*/*"
