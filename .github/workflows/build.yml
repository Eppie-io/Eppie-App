###############################################################################
#
#   Copyright 2023 Eppie(https://eppie.io)
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#
###############################################################################

name: "Build solution"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  dotnet-latest-version: '8.x'
  uno-check-manifest-uri: ''

  name: Eppie.App
  root-dirictory: src/Eppie.App

jobs:

  uno-platform-dotnet-version:
    name: .NET version for the Uno platform
    runs-on: ubuntu-latest

    outputs:
      dotnet-version: ${{ steps.manifest-dotnet-version.outputs.dotnet-sdk-version }}

    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Download uno-check manifest
        id: uno-check-manifest
        uses: ./.github/actions/uno-check-manifest
        with: 
          uno-check-manifest-uri: ${{ env.uno-check-manifest-uri }}

      - name: Get uno platform .NET version
        id: manifest-dotnet-version
        shell: bash
        run: |
          version="${{ fromJson(env.uno-check-manifest).check.variables.DOTNET_SDK_VERSION }}"
          echo "dotnet-sdk-version=$version" >> $GITHUB_OUTPUT
        env:
          uno-check-manifest: ${{ steps.uno-check-manifest.outputs.uno-check-manifest }}

  build:
    runs-on: windows-latest
    needs: uno-platform-dotnet-version

    strategy:
      matrix:
        configuration: [ Debug, Release ]
        target: [ android, gtk, ios, macos, wasm, win-x64, win-x86, win-arm64 ]

    env:
      configuration: ${{ matrix.configuration }}
      target: ${{ matrix.target }}
      dotnet-uno-version: ${{ needs.uno-platform-dotnet-version.outputs.dotnet-version }}

      # template: root/name/name.target/name.target.csproj
      project-file-template: '{0}/{1}.{2}/{1}.{2}.csproj'

    steps:
    - name: Checkout
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      with:
        fetch-depth: 0
        submodules: recursive

    - name: Install .NET (uno platform requirement)
      uses: actions/setup-dotnet@3447fd6a9f9e57506b15f895c5b76d3b197dc7c2 # v3.2.0
      with:
        dotnet-version: ${{ env.dotnet-uno-version }}

    - name: Install the latest .NET version
      uses: actions/setup-dotnet@3447fd6a9f9e57506b15f895c5b76d3b197dc7c2 # v3.2.0
      with:
        dotnet-version: ${{ env.dotnet-latest-version }}

    - name: Setup msbuild
      uses: microsoft/setup-msbuild@1ff57057b5cfdc39105cd07a01d78e9b0ea0c14c # v1.3.1

    - name: Initialize project file paths
      id: init-projects
      uses: ./.github/actions/project-map
      with:
        solution-file: "${{ format('{0}/{1}.sln', env.root-dirictory, env.name) }}"
        android-project-file: "${{ format(env.project-file-template, env.root-dirictory, env.name, 'Mobile') }}"
        gtk-project-file: "${{ format(env.project-file-template, env.root-dirictory, env.name, 'Skia.Gtk') }}"
        ios-project-file: "${{ format(env.project-file-template, env.root-dirictory, env.name, 'Mobile') }}"
        macos-project-file: "${{ format(env.project-file-template, env.root-dirictory, env.name, 'Mobile') }}"
        wasm-project-file: "${{ format(env.project-file-template, env.root-dirictory, env.name, 'Wasm') }}"
        windows-project-file: "${{ format(env.project-file-template, env.root-dirictory, env.name, 'Windows') }}"

    - name: Setup the Uno Platform
      uses: ./.github/actions/setup-uno-platform
      with:
        uno-manifest: ${{ env.uno-check-manifest-uri }}

    - name: Build
      uses: ./.github/actions/build-uno-project
      with:
        project-map: ${{ steps.init-projects.outputs.map }}
        configuration: ${{ env.configuration }}
        target: ${{ env.target }}
