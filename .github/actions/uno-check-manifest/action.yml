###############################################################################
#
#   Copyright 2023 Eppie(https://eppie.io)
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#
###############################################################################

name: Download uno-check manifest

description: Gets the contents of the uno-check manifest.json file

inputs:
  uno-check-manifest-uri:
    description: Alternative uno-check manifest file path or URL
    required: false

  uno-check-version:
    description: uno-check version
    required: false

outputs:
  uno-check-manifest:
    value: ${{ steps.uno-check-manifest.outputs.manifest }}

runs:
  using: "composite"
  steps:
    - id: uno-check-version
      if: ${{ inputs.uno-check-version != null && inputs.uno-check-version != '' }}
      shell: pwsh
      run:  |
        "cli-arg=--version ${{ inputs.uno-check-version }}" | Write-Output >> $env:GITHUB_OUTPUT

    - name: Update uno.check
      shell: pwsh
      run: $(dotnet tool update --global uno.check ${{ steps.uno-check-version.outputs.cli-arg }} --add-source https://api.nuget.org/v3/index.json)
      
    - name: Find uno-check manifest uri
      id: uno-check-manifest-uri
      shell: pwsh
      run: |
        $manifest_uri="${{ inputs.uno-check-manifest-uri }}"

        if ($manifest_uri) 
        {
          "manifest-uri=$manifest_uri" | Write-Output >> $env:GITHUB_OUTPUT
        }
        else 
        {
          $uno_check_output=$(uno-check --ci --non-interactive --verbose --skip all) || $("Execution of the 'uno-check' utility completed with error #$($LASTEXITCODE)." | Write-Output)
          $regex="Loading Manifest from:\s*(\S+)"

          if ("$uno_check_output" -match $regex)
          {
            "manifest-uri=$($matches[1])" | Write-Output >> $env:GITHUB_OUTPUT 
          }
          else
          {
            "manifest-uri=${{ env.main-manifest-uri }}" | Write-Output >> $env:GITHUB_OUTPUT
          }

          $(exit 0)
        }
      env:
        main-manifest-uri: https://raw.githubusercontent.com/unoplatform/uno.check/main/manifests/uno.ui.manifest.json

    - name: Download uno-check manifest
      id: uno-check-manifest
      shell: pwsh
      run: |
        $json = Invoke-WebRequest -uri '${{ env.uno-check-manifest-uri }}' | ConvertFrom-Json | ConvertTo-Json -Compress -Depth 10
        "manifest=$json" | Write-Output >> $env:GITHUB_OUTPUT
      env:
        uno-check-manifest-uri: ${{ steps.uno-check-manifest-uri.outputs.manifest-uri }}
